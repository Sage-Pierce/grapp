<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Allows placement of Environment Variables in this XML -->
    <context:property-placeholder/>

    <!-- Tell Spring that we are using JSR-330 annotations to denote Beans and where to look for them -->
    <context:component-scan scope-resolver="org.springframework.context.annotation.Jsr330ScopeMetadataResolver"
                            base-package="org.codegas.itemmanagement
                                          org.codegas.pathgeneration
                                          org.codegas.security
                                          org.codegas.shoppinglists
                                          org.codegas.stores
                                          org.codegas.users"/>
    <context:annotation-config/>

    <!-- Bean used to create SecurityContexts from Un-/Authenticated Users -->
    <bean id="userSecurityContextCreator" class="org.codegas.security.service_impl.api_impl.DefaultUserSecurityContextCreator">
        <constructor-arg value="EMAIL"/>
    </bean>

    <!-- Bean used to build RESTful API targets to other Bounded Contexts -->
    <bean id="client" class="javax.ws.rs.client.ClientBuilder" factory-method="newClient"/>

    <!-- Bean used to communicate with Item Management Bounded Context from any other Bounded Context -->
    <bean id="itemManagementTarget" factory-bean="client" factory-method="target">
        <constructor-arg value="${root.itemmanagement}"/>
    </bean>

    <!-- Bean used to reset DomainEventPublisher -->
    <bean id="domainEventPublisherManager" class="org.codegas.commons.domain.event.DomainEventPublisherManager"/>

    <!-- AOP Advice for DomainEventPublisherManager -->
    <aop:config>
        <aop:aspect id="domainEventPublisherResetterAspect" ref="domainEventPublisherManager">
            <aop:pointcut id="applicationService" expression="@within(org.codegas.commons.lang.annotation.ApplicationService)"/>
            <aop:before pointcut-ref="applicationService" method="enterPublishingContext"/>
            <aop:after pointcut-ref="applicationService" method="exitPublishingContext"/>
        </aop:aspect>
    </aop:config>
</beans>