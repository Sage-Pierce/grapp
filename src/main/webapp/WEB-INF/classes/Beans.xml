<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">

    <!-- Allows placement of Environment Variables in this XML -->
    <context:property-placeholder/>

    <!-- Tell Spring that we are using JSR-330 annotations to denote Beans and where to look for them -->
    <context:component-scan scope-resolver="org.springframework.context.annotation.Jsr330ScopeMetadataResolver"
                            base-package="com.wisegas.grapp.domain_impl
                                          com.wisegas.grapp.service_impl"/>
    <context:annotation-config/>

    <!-- Instantiate DB URI (For Production and Development) -->
    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="${DATABASE_URL}"/>
    </bean>

    <!-- Specify DB Params -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
    </bean>

    <!-- Configure and tell Spring which Entity Manager Factory to use -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.wisegas.grapp.domain"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgresPlusDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- AOP Advice for Transactional Beans -->
    <tx:advice id="transactionalAdvice" transaction-manager="platformTransactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- How to identify Transactional Beans -->
    <aop:config>
        <aop:pointcut id="transactional" expression="@annotation(com.wisegas.common.lang.annotation.Transactional) || @within(com.wisegas.common.lang.annotation.Transactional)"/>
        <aop:advisor advice-ref="transactionalAdvice" pointcut-ref="transactional"/>
    </aop:config>

    <!-- Configure and tell Spring which Transaction Manager to use -->
    <bean id="platformTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- Tell Spring Transaction Manager to look for Transactional Beans via @Transactional -->
    <tx:annotation-driven transaction-manager="platformTransactionManager" />

</beans>